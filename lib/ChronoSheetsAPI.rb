=begin
#ChronoSheets API

#<div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

# Common files
require 'ChronoSheetsAPI/api_client'
require 'ChronoSheetsAPI/api_error'
require 'ChronoSheetsAPI/version'
require 'ChronoSheetsAPI/configuration'

# Models
require 'ChronoSheetsAPI/models/aggregate_client'
require 'ChronoSheetsAPI/models/aggregate_job_code'
require 'ChronoSheetsAPI/models/aggregate_job_task'
require 'ChronoSheetsAPI/models/aggregate_project'
require 'ChronoSheetsAPI/models/api_response_boolean'
require 'ChronoSheetsAPI/models/api_response_client'
require 'ChronoSheetsAPI/models/api_response_combined_reports_data'
require 'ChronoSheetsAPI/models/api_response_do_login_response'
require 'ChronoSheetsAPI/models/api_response_fleet_vehicle'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_basic_geofence'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_extended_geofence'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_org_report_timesheet_file_attachment'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_org_report_transcript'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_org_report_trip'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_raw_report_item'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_timesheet_automation_with_org_and_geofence'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_timesheet_file_attachment'
require 'ChronoSheetsAPI/models/api_response_for_paginated_list_trip'
require 'ChronoSheetsAPI/models/api_response_geofence'
require 'ChronoSheetsAPI/models/api_response_insert_user_response'
require 'ChronoSheetsAPI/models/api_response_int32'
require 'ChronoSheetsAPI/models/api_response_job_code'
require 'ChronoSheetsAPI/models/api_response_list_aggregate_client'
require 'ChronoSheetsAPI/models/api_response_list_aggregate_job_code'
require 'ChronoSheetsAPI/models/api_response_list_client'
require 'ChronoSheetsAPI/models/api_response_list_fleet_summary_report_item'
require 'ChronoSheetsAPI/models/api_response_list_fleet_vehicle'
require 'ChronoSheetsAPI/models/api_response_list_int32'
require 'ChronoSheetsAPI/models/api_response_list_job_code'
require 'ChronoSheetsAPI/models/api_response_list_job_series_report_item'
require 'ChronoSheetsAPI/models/api_response_list_organisation_group'
require 'ChronoSheetsAPI/models/api_response_list_project'
require 'ChronoSheetsAPI/models/api_response_list_project_costing_report_item'
require 'ChronoSheetsAPI/models/api_response_list_timesheet'
require 'ChronoSheetsAPI/models/api_response_list_timesheet_task'
require 'ChronoSheetsAPI/models/api_response_list_user_for_management'
require 'ChronoSheetsAPI/models/api_response_list_user_hourly_rate'
require 'ChronoSheetsAPI/models/api_response_list_user_job_favourite'
require 'ChronoSheetsAPI/models/api_response_list_usual_hours_day'
require 'ChronoSheetsAPI/models/api_response_organisation'
require 'ChronoSheetsAPI/models/api_response_organisation_group'
require 'ChronoSheetsAPI/models/api_response_project'
require 'ChronoSheetsAPI/models/api_response_timesheet_file_attachment'
require 'ChronoSheetsAPI/models/api_response_timesheet_task'
require 'ChronoSheetsAPI/models/api_response_transcription'
require 'ChronoSheetsAPI/models/api_response_trip'
require 'ChronoSheetsAPI/models/api_response_update_organisation_response'
require 'ChronoSheetsAPI/models/api_response_update_profile_response'
require 'ChronoSheetsAPI/models/api_response_update_user_response'
require 'ChronoSheetsAPI/models/api_response_user_for_management'
require 'ChronoSheetsAPI/models/api_response_user_profile'
require 'ChronoSheetsAPI/models/basic_coordinate'
require 'ChronoSheetsAPI/models/basic_geofence'
require 'ChronoSheetsAPI/models/batch_update_timesheet_request'
require 'ChronoSheetsAPI/models/client'
require 'ChronoSheetsAPI/models/client_series_report_item'
require 'ChronoSheetsAPI/models/client_side_user'
require 'ChronoSheetsAPI/models/client_totals_report_item'
require 'ChronoSheetsAPI/models/combined_reports_data'
require 'ChronoSheetsAPI/models/create_automation_step_request'
require 'ChronoSheetsAPI/models/create_geo_fence_request'
require 'ChronoSheetsAPI/models/create_trip_request'
require 'ChronoSheetsAPI/models/do_login_request'
require 'ChronoSheetsAPI/models/do_login_response'
require 'ChronoSheetsAPI/models/extended_geofence'
require 'ChronoSheetsAPI/models/fleet_summary_report_item'
require 'ChronoSheetsAPI/models/fleet_vehicle'
require 'ChronoSheetsAPI/models/geofence'
require 'ChronoSheetsAPI/models/insert_client_request'
require 'ChronoSheetsAPI/models/insert_job_code_request'
require 'ChronoSheetsAPI/models/insert_organisation_group_request'
require 'ChronoSheetsAPI/models/insert_project_request'
require 'ChronoSheetsAPI/models/insert_task_request'
require 'ChronoSheetsAPI/models/insert_user_hourly_rate_request'
require 'ChronoSheetsAPI/models/insert_user_job_favourite_request'
require 'ChronoSheetsAPI/models/insert_user_request'
require 'ChronoSheetsAPI/models/insert_user_response'
require 'ChronoSheetsAPI/models/insert_vehicle_request'
require 'ChronoSheetsAPI/models/job_code'
require 'ChronoSheetsAPI/models/job_series_report_item'
require 'ChronoSheetsAPI/models/job_totals_report_item'
require 'ChronoSheetsAPI/models/org_report_timesheet_file_attachment'
require 'ChronoSheetsAPI/models/org_report_transcript'
require 'ChronoSheetsAPI/models/org_report_trip'
require 'ChronoSheetsAPI/models/organisation'
require 'ChronoSheetsAPI/models/organisation_group'
require 'ChronoSheetsAPI/models/organisation_pricing_plan'
require 'ChronoSheetsAPI/models/project'
require 'ChronoSheetsAPI/models/project_costing_report_item'
require 'ChronoSheetsAPI/models/project_series_report_item'
require 'ChronoSheetsAPI/models/project_totals_report_item'
require 'ChronoSheetsAPI/models/raw_report_item'
require 'ChronoSheetsAPI/models/save_client_request'
require 'ChronoSheetsAPI/models/save_organisation_group_request'
require 'ChronoSheetsAPI/models/save_vehicle_request'
require 'ChronoSheetsAPI/models/set_organisation_group_users_request'
require 'ChronoSheetsAPI/models/set_usual_hours_request'
require 'ChronoSheetsAPI/models/task_series_report_item'
require 'ChronoSheetsAPI/models/task_totals_report_item'
require 'ChronoSheetsAPI/models/time_slot'
require 'ChronoSheetsAPI/models/timesheet'
require 'ChronoSheetsAPI/models/timesheet_automation_with_org_and_geofence'
require 'ChronoSheetsAPI/models/timesheet_file_attachment'
require 'ChronoSheetsAPI/models/timesheet_task'
require 'ChronoSheetsAPI/models/transcription'
require 'ChronoSheetsAPI/models/trip'
require 'ChronoSheetsAPI/models/trip_coordinate'
require 'ChronoSheetsAPI/models/update_geo_fence_request'
require 'ChronoSheetsAPI/models/update_job_code_request'
require 'ChronoSheetsAPI/models/update_my_profile_request'
require 'ChronoSheetsAPI/models/update_organisation_request'
require 'ChronoSheetsAPI/models/update_organisation_response'
require 'ChronoSheetsAPI/models/update_profile_response'
require 'ChronoSheetsAPI/models/update_project_request'
require 'ChronoSheetsAPI/models/update_task_request'
require 'ChronoSheetsAPI/models/update_user_request'
require 'ChronoSheetsAPI/models/update_user_response'
require 'ChronoSheetsAPI/models/user_for_management'
require 'ChronoSheetsAPI/models/user_hourly_rate'
require 'ChronoSheetsAPI/models/user_job_favourite'
require 'ChronoSheetsAPI/models/user_profile'
require 'ChronoSheetsAPI/models/usual_hours_day'

# APIs
require 'ChronoSheetsAPI/api/aggregate_client_projects_api'
require 'ChronoSheetsAPI/api/aggregate_job_tasks_api'
require 'ChronoSheetsAPI/api/clients_api'
require 'ChronoSheetsAPI/api/file_attachments_api'
require 'ChronoSheetsAPI/api/fleet_api'
require 'ChronoSheetsAPI/api/geo_fencing_api'
require 'ChronoSheetsAPI/api/job_codes_api'
require 'ChronoSheetsAPI/api/organisation_api'
require 'ChronoSheetsAPI/api/organisation_group_users_api'
require 'ChronoSheetsAPI/api/organisation_groups_api'
require 'ChronoSheetsAPI/api/projects_api'
require 'ChronoSheetsAPI/api/reports_api'
require 'ChronoSheetsAPI/api/tasks_api'
require 'ChronoSheetsAPI/api/timesheet_automation_api'
require 'ChronoSheetsAPI/api/timesheets_api'
require 'ChronoSheetsAPI/api/transcripts_api'
require 'ChronoSheetsAPI/api/trips_api'
require 'ChronoSheetsAPI/api/user_job_favourites_api'
require 'ChronoSheetsAPI/api/user_pay_rates_api'
require 'ChronoSheetsAPI/api/user_profile_api'
require 'ChronoSheetsAPI/api/users_api'
require 'ChronoSheetsAPI/api/usual_hours_api'

module ChronoSheetsAPI
  class << self
    # Customize default settings for the SDK using block.
    #   ChronoSheetsAPI.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
