=begin
#ChronoSheets API

#An API for integrating into ChronoSheets timesheets

OpenAPI spec version: v1
Contact: lachlan@chronosheets.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module SwaggerClient
  class TimesheetsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Inserts a single timesheet record
    # 
    # @param request The timesheet request object
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [CsApiApiResponseInt32]
    def timesheets_create_single_timesheet(request, x_chronosheets_auth, opts = {})
      data, _status_code, _headers = timesheets_create_single_timesheet_with_http_info(request, x_chronosheets_auth, opts)
      return data
    end

    # Inserts a single timesheet record
    # 
    # @param request The timesheet request object
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [Array<(CsApiApiResponseInt32, Fixnum, Hash)>] CsApiApiResponseInt32 data, response status code and response headers
    def timesheets_create_single_timesheet_with_http_info(request, x_chronosheets_auth, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TimesheetsApi.timesheets_create_single_timesheet ..."
      end
      # verify the required parameter 'request' is set
      if @api_client.config.client_side_validation && request.nil?
        fail ArgumentError, "Missing the required parameter 'request' when calling TimesheetsApi.timesheets_create_single_timesheet"
      end
      # verify the required parameter 'x_chronosheets_auth' is set
      if @api_client.config.client_side_validation && x_chronosheets_auth.nil?
        fail ArgumentError, "Missing the required parameter 'x_chronosheets_auth' when calling TimesheetsApi.timesheets_create_single_timesheet"
      end
      # resource path
      local_var_path = "/api/Timesheets/CreateSingleTimesheet"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml', 'multipart/form-data'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded', 'multipart/form-data'])
      header_params[:'x-chronosheets-auth'] = x_chronosheets_auth

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CsApiApiResponseInt32')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimesheetsApi#timesheets_create_single_timesheet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete a timesheet
    # 
    # @param timesheet_id The ID of the timesheet to delete
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [CsApiApiResponseBoolean]
    def timesheets_delete_timesheet(timesheet_id, x_chronosheets_auth, opts = {})
      data, _status_code, _headers = timesheets_delete_timesheet_with_http_info(timesheet_id, x_chronosheets_auth, opts)
      return data
    end

    # Delete a timesheet
    # 
    # @param timesheet_id The ID of the timesheet to delete
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [Array<(CsApiApiResponseBoolean, Fixnum, Hash)>] CsApiApiResponseBoolean data, response status code and response headers
    def timesheets_delete_timesheet_with_http_info(timesheet_id, x_chronosheets_auth, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TimesheetsApi.timesheets_delete_timesheet ..."
      end
      # verify the required parameter 'timesheet_id' is set
      if @api_client.config.client_side_validation && timesheet_id.nil?
        fail ArgumentError, "Missing the required parameter 'timesheet_id' when calling TimesheetsApi.timesheets_delete_timesheet"
      end
      # verify the required parameter 'x_chronosheets_auth' is set
      if @api_client.config.client_side_validation && x_chronosheets_auth.nil?
        fail ArgumentError, "Missing the required parameter 'x_chronosheets_auth' when calling TimesheetsApi.timesheets_delete_timesheet"
      end
      # resource path
      local_var_path = "/api/Timesheets/DeleteTimesheet"

      # query parameters
      query_params = {}
      query_params[:'TimesheetId'] = timesheet_id

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml', 'multipart/form-data'])
      header_params[:'x-chronosheets-auth'] = x_chronosheets_auth

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CsApiApiResponseBoolean')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimesheetsApi#timesheets_delete_timesheet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get timesheets between start and end dates
    # 
    # @param start_date The start date of the date range
    # @param end_date The end date of the date range
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [CsApiApiResponseListTimesheet]
    def timesheets_get_timesheets(start_date, end_date, x_chronosheets_auth, opts = {})
      data, _status_code, _headers = timesheets_get_timesheets_with_http_info(start_date, end_date, x_chronosheets_auth, opts)
      return data
    end

    # Get timesheets between start and end dates
    # 
    # @param start_date The start date of the date range
    # @param end_date The end date of the date range
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [Array<(CsApiApiResponseListTimesheet, Fixnum, Hash)>] CsApiApiResponseListTimesheet data, response status code and response headers
    def timesheets_get_timesheets_with_http_info(start_date, end_date, x_chronosheets_auth, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TimesheetsApi.timesheets_get_timesheets ..."
      end
      # verify the required parameter 'start_date' is set
      if @api_client.config.client_side_validation && start_date.nil?
        fail ArgumentError, "Missing the required parameter 'start_date' when calling TimesheetsApi.timesheets_get_timesheets"
      end
      # verify the required parameter 'end_date' is set
      if @api_client.config.client_side_validation && end_date.nil?
        fail ArgumentError, "Missing the required parameter 'end_date' when calling TimesheetsApi.timesheets_get_timesheets"
      end
      # verify the required parameter 'x_chronosheets_auth' is set
      if @api_client.config.client_side_validation && x_chronosheets_auth.nil?
        fail ArgumentError, "Missing the required parameter 'x_chronosheets_auth' when calling TimesheetsApi.timesheets_get_timesheets"
      end
      # resource path
      local_var_path = "/api/Timesheets/GetTimesheets"

      # query parameters
      query_params = {}
      query_params[:'StartDate'] = start_date
      query_params[:'EndDate'] = end_date

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml', 'multipart/form-data'])
      header_params[:'x-chronosheets-auth'] = x_chronosheets_auth

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CsApiApiResponseListTimesheet')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimesheetsApi#timesheets_get_timesheets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Batch update timesheets
    # 
    # @param request The batch update timesheets request
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [CsApiApiResponseListInt32]
    def timesheets_update_timesheets(request, x_chronosheets_auth, opts = {})
      data, _status_code, _headers = timesheets_update_timesheets_with_http_info(request, x_chronosheets_auth, opts)
      return data
    end

    # Batch update timesheets
    # 
    # @param request The batch update timesheets request
    # @param x_chronosheets_auth The ChronoSheets Auth Token
    # @param [Hash] opts the optional parameters
    # @return [Array<(CsApiApiResponseListInt32, Fixnum, Hash)>] CsApiApiResponseListInt32 data, response status code and response headers
    def timesheets_update_timesheets_with_http_info(request, x_chronosheets_auth, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TimesheetsApi.timesheets_update_timesheets ..."
      end
      # verify the required parameter 'request' is set
      if @api_client.config.client_side_validation && request.nil?
        fail ArgumentError, "Missing the required parameter 'request' when calling TimesheetsApi.timesheets_update_timesheets"
      end
      # verify the required parameter 'x_chronosheets_auth' is set
      if @api_client.config.client_side_validation && x_chronosheets_auth.nil?
        fail ArgumentError, "Missing the required parameter 'x_chronosheets_auth' when calling TimesheetsApi.timesheets_update_timesheets"
      end
      # resource path
      local_var_path = "/api/Timesheets/UpdateTimesheets"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml', 'multipart/form-data'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded', 'multipart/form-data'])
      header_params[:'x-chronosheets-auth'] = x_chronosheets_auth

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CsApiApiResponseListInt32')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TimesheetsApi#timesheets_update_timesheets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
