=begin
#ChronoSheets API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::OrganisationGroupsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'OrganisationGroupsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::OrganisationGroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganisationGroupsApi' do
    it 'should create an instance of OrganisationGroupsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::OrganisationGroupsApi)
    end
  end

  # unit tests for organisation_groups_create_organisation_group
  # Create an organisation group
  # 
  # @param request 
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseInt32]
  describe 'organisation_groups_create_organisation_group test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for organisation_groups_get_organisation_group
  # Get a particular organisation group
  # 
  # @param organisation_group_id The ID of the organisation group you want to get
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseOrganisationGroup]
  describe 'organisation_groups_get_organisation_group test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for organisation_groups_get_organisation_groups
  # Get a collection of organisation groups that are under your organisation
  # 
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseListOrganisationGroup]
  describe 'organisation_groups_get_organisation_groups test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for organisation_groups_get_organisation_groups_for_job
  # Get org groups for a particular job
  # 
  # @param job_id The ID of the job
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseListOrganisationGroup]
  describe 'organisation_groups_get_organisation_groups_for_job test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for organisation_groups_get_organisation_groups_for_vehicle
  # Get org groups for a particular vehicle
  # 
  # @param vehicle_id The ID of the vehicle
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseListOrganisationGroup]
  describe 'organisation_groups_get_organisation_groups_for_vehicle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for organisation_groups_update_organisation_group
  # Update an organisation group
  # 
  # @param request 
  # @param x_chronosheets_auth The ChronoSheets Auth Token
  # @param [Hash] opts the optional parameters
  # @return [CsApiApiResponseBoolean]
  describe 'organisation_groups_update_organisation_group test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
